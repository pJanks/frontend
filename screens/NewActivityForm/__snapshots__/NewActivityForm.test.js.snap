// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NewActivityForm should load with props 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#b2e1f4",
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <Text
    style={
      Object {
        "fontSize": 18,
        "fontWeight": "bold",
        "paddingTop": 15,
      }
    }
  >
    Activity:
  </Text>
  <View>
    <View
      style={
        Object {
          "backgroundColor": "#fff",
          "borderColor": "gray",
          "borderWidth": 1,
          "height": 40,
          "width": 250,
        }
      }
    >
      <RCTPicker
        items={
          Array [
            Object {
              "label": "Select an activity...",
              "textColor": undefined,
              "value": 0,
            },
            Object {
              "label": "Mountain Biking",
              "textColor": undefined,
              "value": "Mountain Biking",
            },
            Object {
              "label": "Hiking",
              "textColor": undefined,
              "value": "Hiking",
            },
            Object {
              "label": "Road Biking",
              "textColor": undefined,
              "value": "Road Biking",
            },
            Object {
              "label": "Baseball",
              "textColor": undefined,
              "value": "Baseball",
            },
            Object {
              "label": "Golf",
              "textColor": undefined,
              "value": "Golf",
            },
            Object {
              "label": "Cricket",
              "textColor": undefined,
              "value": "Cricket",
            },
            Object {
              "label": "Diving",
              "textColor": undefined,
              "value": "Diving",
            },
            Object {
              "label": "Soccer",
              "textColor": undefined,
              "value": "Soccer",
            },
            Object {
              "label": "Football",
              "textColor": undefined,
              "value": "Football",
            },
            Object {
              "label": "Frisbee",
              "textColor": undefined,
              "value": "Frisbee",
            },
            Object {
              "label": "Horseback Riding",
              "textColor": undefined,
              "value": "Horseback Riding",
            },
            Object {
              "label": "Kayaking",
              "textColor": undefined,
              "value": "Kayaking",
            },
            Object {
              "label": "Stand-up Paddle Boarding",
              "textColor": undefined,
              "value": "Stand-up Paddle Boarding",
            },
            Object {
              "label": "Rafting",
              "textColor": undefined,
              "value": "Rafting",
            },
            Object {
              "label": "Snowboarding",
              "textColor": undefined,
              "value": "Snowboarding",
            },
            Object {
              "label": "Skiing",
              "textColor": undefined,
              "value": "Skiing",
            },
            Object {
              "label": "Paragliding",
              "textColor": undefined,
              "value": "Paragliding",
            },
            Object {
              "label": "Rock Climbing",
              "textColor": undefined,
              "value": "Rock Climbing",
            },
            Object {
              "label": "Running",
              "textColor": undefined,
              "value": "Running",
            },
          ]
        }
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        selectedIndex={0}
        style={
          Array [
            Object {
              "height": 216,
            },
            undefined,
          ]
        }
      />
    </View>
  </View>
  <Text
    style={
      Object {
        "fontSize": 18,
        "fontWeight": "bold",
        "paddingTop": 15,
      }
    }
  >
    Location:
  </Text>
  <TextInput
    allowFontScaling={true}
    onChangeText={[Function]}
    placeholder="City, State or Landmark"
    rejectResponderTermination={true}
    style={
      Object {
        "backgroundColor": "#fff",
        "height": 40,
        "paddingLeft": 10,
        "width": 250,
      }
    }
    underlineColorAndroid="transparent"
    value=""
  />
  <Text
    style={
      Object {
        "fontSize": 18,
        "fontWeight": "bold",
        "paddingTop": 15,
      }
    }
  >
    Date:
  </Text>
  <View
    style={
      Object {
        "marginBottom": 30,
        "width": 250,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessibilityStates={Array []}
      accessible={true}
      focusable={true}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "padding": 8,
                "textAlign": "center",
              },
              Object {
                "color": "#ed950e",
              },
            ]
          }
        >
          Select a Date
        </Text>
      </View>
    </View>
  </View>
  <View
    style={
      Object {
        "marginBottom": 30,
        "width": 250,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessibilityStates={Array []}
      accessible={true}
      focusable={true}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "padding": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          Create Activity
        </Text>
      </View>
    </View>
  </View>
</View>
`;
